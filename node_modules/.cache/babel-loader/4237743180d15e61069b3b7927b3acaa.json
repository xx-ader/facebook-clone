{"ast":null,"code":"var _jsxFileName = \"/home/sony/facebook-clone/src/components/ContextProv.jsx\",\n    _s = $RefreshSig$(),\n    _s2 = $RefreshSig$();\n\nimport React, { createContext, useContext, useReducer } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport const StateContext = /*#__PURE__*/createContext();\nexport const ContextProv = ({\n  reducer,\n  initialState,\n  children\n}) => {\n  _s();\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(StateContext.Provider, {\n      value: useReducer(reducer, initialState),\n      children: children\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 9,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n};\n\n_s(ContextProv, \"skVOqNGrFQuDFh+lpttAJ2AZFeA=\");\n\n_c = ContextProv;\nexport const useStateValue = () => {\n  _s2();\n\n  return useContext(StateContext);\n};\n\n_s2(useStateValue, \"gDsCjeeItUuvgOWf1v4qoK9RF6k=\");\n\nvar _c;\n\n$RefreshReg$(_c, \"ContextProv\");","map":{"version":3,"sources":["/home/sony/facebook-clone/src/components/ContextProv.jsx"],"names":["React","createContext","useContext","useReducer","StateContext","ContextProv","reducer","initialState","children","useStateValue"],"mappings":";;;;AAAA,OAAOA,KAAP,IAAgBC,aAAhB,EAA+BC,UAA/B,EAA2CC,UAA3C,QAA6D,OAA7D;;;AAEA,OAAO,MAAMC,YAAY,gBAAGH,aAAa,EAAlC;AAEP,OAAO,MAAMI,WAAW,GAAG,CAAC;AAAEC,EAAAA,OAAF;AAAWC,EAAAA,YAAX;AAAyBC,EAAAA;AAAzB,CAAD,KAAyC;AAAA;;AAElE,sBACE;AAAA,2BACE,QAAC,YAAD,CAAc,QAAd;AAAuB,MAAA,KAAK,EAAEL,UAAU,CAACG,OAAD,EAAUC,YAAV,CAAxC;AAAA,gBACGC;AADH;AAAA;AAAA;AAAA;AAAA;AADF,mBADF;AAOD,CATM;;GAAMH,W;;KAAAA,W;AAWb,OAAO,MAAMI,aAAa,GAAG;AAAA;;AAAA,SAAMP,UAAU,CAACE,YAAD,CAAhB;AAAA,CAAtB;;IAAMK,a","sourcesContent":["import React, { createContext, useContext, useReducer } from \"react\";\n\nexport const StateContext = createContext();\n\nexport const ContextProv = ({ reducer, initialState, children }) => {\n\n  return (\n    <>\n      <StateContext.Provider value={useReducer(reducer, initialState)}>\n        {children}\n      </StateContext.Provider>\n    </>\n  );\n};\n\nexport const useStateValue = () => useContext(StateContext);\n"]},"metadata":{},"sourceType":"module"}